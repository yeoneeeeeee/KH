/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-08-17 02:48:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<h2>실시간 대기오염 정보</h2>\r\n");
      out.write("	\r\n");
      out.write("	지역 : \r\n");
      out.write("	<select id=\"location\">\r\n");
      out.write("		<option>서울</option>\r\n");
      out.write("		<option>부산</option>\r\n");
      out.write("		<option>대전</option>\r\n");
      out.write("		<option>대구</option>\r\n");
      out.write("		<option>경기</option>\r\n");
      out.write("	</select>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<button id=\"btn1\">실시간 대기오염정보 확인</button>\r\n");
      out.write("	\r\n");
      out.write("	<button id=\"btn2\">실시간 대기오염정보 확인(xml방식)</button>\r\n");
      out.write("	\r\n");
      out.write("	<table id=\"result1\" border=\"1\" align=\"center\">\r\n");
      out.write("		<thead>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>측정소명</th>\r\n");
      out.write("				<th>측정시간</th>\r\n");
      out.write("				<th>통합대기환경수치</th>\r\n");
      out.write("				<th>미세먼지농도</th>\r\n");
      out.write("				<th>일산화탄소농도</th>\r\n");
      out.write("				<th>이산화질소농도</th>\r\n");
      out.write("				<th>아황산가스농도</th>\r\n");
      out.write("				<th>오존농도</th>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</thead>\r\n");
      out.write("		<tbody>\r\n");
      out.write("		\r\n");
      out.write("		</tbody>\r\n");
      out.write("	</table>\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("		$(()=> {\r\n");
      out.write("			\r\n");
      out.write("			$(\"#btn1\").click( () => {\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					url : 'air.do',\r\n");
      out.write("					data : {\"location\" : $(\"#location\").val() },\r\n");
      out.write("					success : data => {\r\n");
      out.write("						console.log(data);\r\n");
      out.write("						\r\n");
      out.write("						let value = \"\";\r\n");
      out.write("						for( let item of data.response.body.items){\r\n");
      out.write("							//console.log(item);\r\n");
      out.write("							value += `<tr>\r\n");
      out.write("										<td>${item.stationName}</td>\r\n");
      out.write("										<td>${item.dataTime}</td>\r\n");
      out.write("										<td>${item.khaiValue}</td>\r\n");
      out.write("										<td>${item.pm10Value}</td>\r\n");
      out.write("										<td>${item.coValue}</td>\r\n");
      out.write("										<td>${item.no2Value}</td>\r\n");
      out.write("										<td>${item.so2Value}</td>\r\n");
      out.write("										<td>${item.o3Value}</td>\r\n");
      out.write("									</tr>`;\r\n");
      out.write("						}\r\n");
      out.write("						\r\n");
      out.write("						$(\"#result1>tbody\").html(value);\r\n");
      out.write("					}\r\n");
      out.write("				})\r\n");
      out.write("			})\r\n");
      out.write("			\r\n");
      out.write("			$(\"#btn2\").click(() => {\r\n");
      out.write("				\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					url : \"air2.do\",\r\n");
      out.write("					data: {location :  $(\"#location\").val()},\r\n");
      out.write("					success : data => {\r\n");
      out.write("						// WebWorkspace1 , AjaxProject 참고.\r\n");
      out.write("						// 제이쿼리 메서드 사용가능. \r\n");
      out.write("						// find() : 기준이 되는 요소의 하위 요소들중 특정 요소를 찾을때 사용하는 jquery메스드로 xml에서도 적용가능.\r\n");
      out.write("						\r\n");
      out.write("						// 1. 응답데이터 안에 데이터가 담겨있는 요소선택(item요소)\r\n");
      out.write("						console.log($(data).find(\"item\"));\r\n");
      out.write("						\r\n");
      out.write("						// 2. 반복문을 이용해서 데이터가 담긴 요소들에 접근해서 동적으료 요소생성하기.\r\n");
      out.write("						\r\n");
      out.write("						let value = \"\";\r\n");
      out.write("						\r\n");
      out.write("						$(data).find(\"item\").each( (index , item) => {\r\n");
      out.write("							\r\n");
      out.write("							//console.log($(item).find(\"stationName\").text());\r\n");
      out.write("							value += \"<tr>\"\r\n");
      out.write("										+\"<td>\" + $(item).find(\"stationName\").text() +\"</td>\"\r\n");
      out.write("										+\"<td>\" + $(item).find(\"dataTime\").text() +\"</td>\"\r\n");
      out.write("										+\"<td>\" + $(item).find(\"khaiValue\").text() +\"</td>\"\r\n");
      out.write("										+\"<td>\" + $(item).find(\"pm10Value\").text() +\"</td>\"\r\n");
      out.write("										+\"<td>\" + $(item).find(\"coValue\").text() +\"</td>\"\r\n");
      out.write("										+\"<td>\" + $(item).find(\"no2Value\").text() +\"</td>\"\r\n");
      out.write("										+\"<td>\" + $(item).find(\"so2Value\").text() +\"</td>\"\r\n");
      out.write("										+\"<td>\" + $(item).find(\"o3Value\").text() +\"</td>\"\r\n");
      out.write("								  +  \"</tr>\"\r\n");
      out.write("						});\r\n");
      out.write("						$(\"#result1 tbody\").html(value);\r\n");
      out.write("					}\r\n");
      out.write("				})\r\n");
      out.write("			})\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		})\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
