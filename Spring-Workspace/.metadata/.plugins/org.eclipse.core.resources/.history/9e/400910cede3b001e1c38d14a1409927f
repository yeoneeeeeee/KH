<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
	xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- 암호화 인코딩 빈 등록 -->
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	
	<!-- http? URL경로에 따른 보안규칙을 정의해주는 태그.
	           특정 URL로 접근시 해당 URL에 접근할수 있는 권한이 없다면, 오류페이지로 보내거나, 인증을 처리하게끔 유도할수있다.
	           ★URL단위로 사용자마자 이용할수있는 권한을 직접 부여해줘야함.
	   -->
	<!-- 정적파일은 권한체크 제외 -->
	<http security="none" pattern="/resources/**"/>
	
	<!-- 권한체크 설정 -->
	<!-- 보안구성을 자동으로 수행함. -->
	<http auto-config="true">
		
		<!-- / , /main.jsp 혹은 로그인 요청, 회원가입 요청시에는 권한체크하면안됨 -->
		<intercept-url pattern="/" access="permitAll"/>
		<intercept-url pattern="/main.jsp" access="permitAll"/>
		<intercept-url pattern="/login.me" access="permitAll"/>
		<intercept-url pattern="/memberLogin.me" access="permitAll"/>
		
		<!-- 위 4가지 경로를 제외한 모든 URL요청은 USER권한을 가지고 있어야지만 접근할수 있도록 설정 -->
		<intercept-url pattern="/**" access="hasRole('USER')"/>
		<!-- 관리자 페이지용 URL권한 -->
		<intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>
		
		
		<!--  
			form-login : 폼 기반 인증 설정을 지정할수 있는 태그
			
			- login-page : 로그인폼 페이지 (인가하지 않은 url로 이동하려고하면 항상 로그인페이지를 보여줌.)
			- login-processing-url : 로그인폼 제출시 해당폼의 정보를 처리하는 url을 지정. 별도의 핸들러 작성할 필요 없음.
		
		-->
		
		<form-login
			login-page="/memberLogin.me" 
			login-processing-url="/login.me"
			username-parameter="userId"
			password-parameter="userPwd"
		/>
		
		
		
		
		
		
		
		
	</http>
	
	<!-- 빈객체 스캔 -->
	<context:component-scan base-package="com.kh.spring.security" />
	
	<!-- 
		인증/권한 검사용 manager빈 설정
		authenication-manager,  provider : 인증을 수행할 bean객체 지정
		                                   실제 인증처리를 담당하며, 인증처리용 로직을 securityService 내부에 작성
		                                   인증성공시(로그인성공) 인증된 사용자 정보(UserDetails)를 반환
	 -->
	
	<authentication-manager>
		<authentication-provider user-service-ref="securityService">
			<password-encoder ref="bcryptPasswordEncoder" />
		</authentication-provider>
	</authentication-manager>
	
	
	
	
	
	
	
	
	
</beans:beans>
